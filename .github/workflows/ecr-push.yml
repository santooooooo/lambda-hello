name: push ecr image and update aws batch definition

on:
  push:
    # # PRが閉じたタイミングで実行
    # types:
    #   - closed
    # # mainブランチのみを対象とする
    # branches:
    #   - main

jobs:
  ECRPushAndDeployToAwsBatch:
    runs-on: ubuntu-latest
    # `permissions` を設定しないと OIDC が使えないので注意
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3

      # AWS 認証
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: "us-west-1"
          role-to-assume: "arn:aws:iam::955263032402:role/lambda-hello-github-actions-ecr-role"

      # ECR ログイン
      - uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr # outputs で参照するために id を設定

      # Docker イメージを build・push する
      # - name: build and push docker image to ecr
      #   env:
      #     # ECR レジストリを `aws-actions/amazon-ecr-login` アクションの `outputs.registry` から取得
      #     REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     # イメージを push する ECR リポジトリ名
      #     REPOSITORY: "aws-batch"
      #     # 任意のイメージタグ
      #     # 今回は Git のコミットハッシュにしておく
      #     IMAGE_TAG: ${{ github.sha }}
      #   shell: bash
      #   run: |
      #     docker build . --tag ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
      #     docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
      #     echo "##[set-output name=image;]$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Get current JobDefinition revision
        id: get-current-job-definition
        shell: bash
        run: |
          if [[ ! $(which aws) > /dev/null ]]; then
            apt-get update && apt-get install -y awscli
          fi

          REVISION=$(aws batch describe-job-definitions --job-definition-name JobDefinition --status ACTIVE --query "jobDefinitions[0].revision")

          echo "##[set-output name=revision;]$REVISION"
          echo "##[set-output name=job-definition;]JobDefinition"
