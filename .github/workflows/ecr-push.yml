name: push ecr image and register new aws batch definition

on:
  push:
    # pull_request:
    # # # PRが閉じたタイミングで実行
    #   types:
    #     - closed
    #   # mainブランチのみを対象とする
    #   branches:
    #     - main

env:
  ECR_AND_AWS_BATCH_ROLE: "arn:aws:iam::955263032402:role/lambda-hello-github-actions-ecr-role"
  AWS_BATCH_JOB_DEFINITION_NAME: "aws-batch-4:1"
  ECR_TASK_DEFINITION_TASK_EXECUTION_ROLE: "arn:aws:iam::955263032402:role/compose-infrastructure-ECSTaskExecutionRole-EHE7YKHPT3WN"
  JOB_TASK_DEFINITION_JSON: "job-task-def.json"
  NEW_JOB_TASK_DEFINITION_JSON: "new-job-task-def.json"

jobs:
  ECRPushAndDeployToAwsBatch:
    runs-on: ubuntu-latest
    # `permissions` を設定しないと OIDC が使えないので注意
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3

      # AWS 認証
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: "us-west-1"
          role-to-assume: "arn:aws:iam::955263032402:role/lambda-hello-github-actions-ecr-role"

      # ECR ログイン
      - uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr # outputs で参照するために id を設定

      # Docker イメージを build・push する
      - name: build and push docker image to ecr
        id: push-ecr
        env:
          # ECR レジストリを `aws-actions/amazon-ecr-login` アクションの `outputs.registry` から取得
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: "aws-batch"
          # 任意のイメージタグ
          IMAGE_TAG: ${{ github.sha }}
        shell: bash
        run: |
          docker build . --tag ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          echo "##[set-output name=image;]$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Get current JobDefinition revision
        id: get-current-job-definition
        shell: bash
        run: |
          if [[ ! $(which aws) > /dev/null ]]; then
            apt-get update && apt-get install -y awscli
          fi

          aws ecs describe-task-definition --task-definition ${{env.AWS_BATCH_JOB_DEFINITION_NAME}} | jq '.taskDefinition | del (.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)' > ${{env.JOB_TASK_DEFINITION_JSON}}
          PREVIOUS_IMAGE_TAG=$(cat ${{env.JOB_TASK_DEFINITION_JSON}} | jq -r '.containerProperties.image | split(":")[1]')
          cat ${{env.JOB_TASK_DEFINITION_JSON}} | jq --arg PREVIOUS_IMAGE_TAG "$PREVIOUS_IMAGE_TAG" --arg IMAGE_TAG "${{ github.sha }}"" '.containerProperties.image |= sub($PREVIOUS_IMAGE_TAG; $IMAGE_TAG)' > ${{env.NEW_JOB_TASK_DEFINITION_JSON}}

      - name: Register new JobDefinition
        id: register-new-job-definition
        env:
          ROLE_ARN: ${{ env.ECR_AND_AWS_BATCH_ROLE }}
          ECR_IMAGE: ${{ steps.push-ecr.outputs.image }}
          JOB_DEFINITION_NAME: ${{ env.AWS_BATCH_JOB_DEFINITION_NAME }}
          EXECUTION_ROLE_ARN: ${{env.ECR_TASK_DEFINITION_TASK_EXECUTION_ROLE}}
        shell: bash
        run: |
          aws batch register-job-definition --cli-input-json file://$NEW_JOB_TASK_DEFINITION_JSON

          
